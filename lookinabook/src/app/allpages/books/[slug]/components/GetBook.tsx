"use client";

import { useParams } from "next/navigation";
import { useQuery } from "@apollo/client";
import { GET_BOOK_BY_SLUG } from "@/app/GraphqlOnClient/queries/bookQueries";
//import { Book } from "@/app/types/bookTypes";
import styles from "./GetBook.module.css"

export default function Book() {
  const params = useParams(); // –ü–æ–ª—É—á–∞–µ–º slug
  console.log("Params:", params); // –ü—Ä–æ–≤–µ—Ä—å –≤ –∫–æ–Ω—Å–æ–ª–∏

  const slug = params?.slug; // –î–æ—Å—Ç–∞–µ–º slug
  if (!slug) return <p>Loading...</p>; // –ó–∞—â–∏—Ç–∞ –æ—Ç undefined

  const { data, loading, error } = useQuery(GET_BOOK_BY_SLUG, {
    skip: !slug, // –ù–µ –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å, –µ—Å–ª–∏ slug –Ω–µ—Ç
    variables: { slug },
    onCompleted: (data) => console.log("Book data:", data), // ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
  onError: (err) => console.error("GraphQL Error:", err), // ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
  });

  if (loading) return <p>Loading...</p>;
  if (error) return <p>Error loading book.</p>;

  console.log("Final data:", data); // üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ data

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ data –Ω–µ undefined
  if (!data) {
    return <p>Book not found.</p>;
  }

  const { title, annotation, author } = data.getBookBySlug;

  return (
    <div>
      <h1>Title: {title}</h1>
      <p>{annotation || "No annotation available"}</p>
      <p>Author: {author?.username || "Unknown"}</p>

      <div className={styles["table-container"]}>
      <div className={styles.table}>

      </div>
      </div>

    </div>
  );
}

